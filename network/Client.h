#ifndef _NTW_CLIENT_H
#define _NTW_CLIENT_H

#include <iostream>
#include <vector>
#include <QTcpSocket>

class Client
{

public:
    Client();
    Client(QString client_id, QTcpSocket *socket);
    Client(std::string client_id, QTcpSocket *socket);

    // Local resources
    bool connect(QString host_address, QString host_port); // Returns the success state
    void setClientId(QString client_id);
    QString getClientId();
    QString readCommand();                  // Unstacks and returns the oldest command
    bool connected = false;

    // Remote resources (sends a query)
    QString queryInspect();                 // JSON response includes client ID
    QString queryMap();
    QString sendCommand(QString command);   // left, right, fwd, bwd, jump

private:
    QTcpSocket *socket = nullptr;
    QString client_id = NULL;               // generated by the server
    std::vector<QString> commands_stack;    // stack of commands sent or received
};

#endif
